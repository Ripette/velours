<!DOCTYPE html>
<html>
  <head>
    <title>Velours</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbo-track': 'reload' %>
    <link rel="manifest" href="/manifest.json">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <%= javascript_importmap_tags %>

    <!-- OneSignal SDK -->
    <script src="https://cdn.onesignal.com/sdks/OneSignalSDK.js" defer></script>

    <script>
      window.OneSignalDeferred = window.OneSignalDeferred || [];
      OneSignalDeferred.push(async function(OneSignal) {
        console.log('OneSignal initialisation...');

        await OneSignal.init({
          appId: "12a609ee-318e-4423-8e34-062dc14bb6e9",
          safari_web_id: "web.onesignal.auto.570f8921-edd7-49b2-93d5-7301d9209087",
          notifyButton: {
            enable: true,
            showAfterSubscribed: false,
            size: 'large',
            position: 'bottom',
            offset: {
              bottom: '20px',
              left: '20px',
              right: '20px'
            },
            prenotify: true,
            showCredit: false,
            text: {
              'tip.state.unsubscribed': '🔔 Activer les notifications',
              'tip.state.subscribed': '✅ Notifications activées',
              'tip.state.blocked': '❌ Notifications bloquées',
              'message.prenotify': 'Cliquez pour activer les notifications',
              'message.action.subscribed': 'Merci !',
              'message.action.resubscribed': 'Notifications réactivées !',
              'message.action.unsubscribed': 'Vous ne recevrez plus de notifications',
              'dialog.main.title': 'Activer les notifications',
              'dialog.main.button.subscribe': 'Activer',
              'dialog.main.button.unsubscribe': 'Désactiver',
              'dialog.blocked.title': 'Notifications bloquées',
              'dialog.blocked.message': 'Activez les notifications dans les paramètres de votre navigateur'
            }
          },
          serviceWorkerPath: "OneSignalSDKWorker.js",
          serviceWorkerParam: { scope: '/' },
          allowLocalhostAsSecureOrigin: true,
          autoRegister: false,
          autoResubscribe: true,
          subdomainName: null,
          welcomeNotification: {
            title: "Bienvenue sur Velours !",
            message: "Vous recevrez maintenant les notifications importantes."
          }
        });

        console.log('OneSignal initialisé avec succès');

        // Vérifier le statut des permissions
        OneSignal.getNotificationPermission().then(function(permission) {
          console.log('Permission actuelle:', permission);
          updateNotificationButton(permission);
        });

        // Écouter les changements de permission
        OneSignal.on('notificationPermissionChange', function(permission) {
          console.log('Permission changée:', permission);
          updateNotificationButton(permission);
        });

        // Écouter les clics sur les notifications
        OneSignal.on('notificationClick', function(event) {
          console.log('Notification cliquée:', event);
        });
      });

      function updateNotificationButton(permission) {
        const btn = document.getElementById('manual-notif-btn');
        if (!btn) return;

        if (permission === 'granted') {
          btn.textContent = '✅ Notifications activées';
          btn.style.background = '#4CAF50';
          btn.style.display = 'none';
        } else if (permission === 'denied') {
          btn.textContent = '❌ Notifications bloquées';
          btn.style.background = '#f44336';
        } else {
          btn.textContent = '🔔 Activer les notifications';
          btn.style.background = '#2196F3';
          btn.style.display = 'block';
        }
      }

      function requestNotifications() {
        console.log('[DEBUG] Clic sur bouton bleu Activer les notifications');
        if (window.OneSignal) {
          console.log('[DEBUG] OneSignal existe, on tente le prompt');
          OneSignal.showSlidedownPrompt();
        } else {
          console.log('[DEBUG] OneSignal PAS chargé');
          alert('OneSignal n\'est pas chargé. Le script a-t-il bien été chargé ?');
          setTimeout(requestNotifications, 1000);
        }
      }

      function sendTestNotification() {
        fetch('/test_notification', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert('Notification de test envoyée ! Vérifiez votre appareil.');
          } else {
            alert('Erreur: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Erreur:', error);
          alert('Erreur lors de l\'envoi de la notification de test');
        });
      }
    </script>
  </head>

  <body>
    <%= render 'layouts/header' %>

    <!-- Bouton manuel pour activer les notifications -->
    <button id="manual-notif-btn"
            onclick="requestNotifications()"
            style="position: fixed; bottom: 20px; left: 50%; transform: translateX(-50%); z-index: 9999; background: #2196F3; color: white; border: none; border-radius: 25px; padding: 12px 24px; font-size: 16px; font-weight: bold; box-shadow: 0 4px 12px rgba(0,0,0,0.3); cursor: pointer; display: block;">
      🔔 Activer les notifications
    </button>

    <!-- Bouton de test pour envoyer une notification -->
    <button id="test-notif-btn"
            onclick="sendTestNotification()"
            style="position: fixed; bottom: 80px; left: 50%; transform: translateX(-50%); z-index: 9999; background: #4CAF50; color: white; border: none; border-radius: 25px; padding: 12px 24px; font-size: 16px; font-weight: bold; box-shadow: 0 4px 12px rgba(0,0,0,0.3); cursor: pointer; display: block;">
      🧪 Test Notification
    </button>

    <div id="flash-container" class="flash-container">
      <% flash.each do |type, message| %>
        <div class="flash-message <%= type %>">
          <%= message %>
        </div>
      <% end %>
    </div>

    <main class="container">
      <%= yield %>
    </main>

    <div id="modal-backdrop" class="modal-backdrop"></div>

    <script>
      document.addEventListener('turbo:load', () => {
        console.log('Page chargée, vérification OneSignal...');

        // Flash message handler
        const flashMessages = document.querySelectorAll('.flash-message');
        if (flashMessages.length > 0) {
          flashMessages.forEach((message, index) => {
            setTimeout(() => {
              message.classList.add('show');
            }, index * 100);

            setTimeout(() => {
              message.classList.remove('show');
              setTimeout(() => {
                if (message.parentElement) {
                  message.parentElement.removeChild(message);
                }
              }, 500);
            }, 2500 + (index * 100));
          });
        }

        // Modal handler
        const modal = document.getElementById('scenario-modal');
        const backdrop = document.getElementById('modal-backdrop');

        const scenarioForm = document.getElementById('passion-scenario-form');
        if (scenarioForm) {
          scenarioForm.addEventListener('submit', function() {
            closeModal();
          });
        }

        // Vérifier OneSignal après chargement
        setTimeout(() => {
          if (window.OneSignal) {
            OneSignal.getNotificationPermission().then(function(permission) {
              updateNotificationButton(permission);
            });
          }
        }, 2000);
      });
    </script>
  </body>
</html>
