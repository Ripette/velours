<!DOCTYPE html>
<html>
  <head>
    <title>Velours</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbo-track': 'reload' %>
    <link rel="manifest" href="/manifest.json">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <%= javascript_importmap_tags %>

    <script src="https://cdn.onesignal.com/sdks/web/v16/OneSignalSDK.page.js"></script>
    <script>
      window.OneSignalDeferred = window.OneSignalDeferred || [];
      OneSignalDeferred.push(async function(OneSignal) {
        await OneSignal.init({
          appId: "12a609ee-318e-4423-8e34-062dc14bb6e9",
          safari_web_id: "web.onesignal.auto.570f8921-edd7-49b2-93d5-7301d9209087",
          notifyButton: {
            enable: true,
          },
        });
      });
    </script>
  </head>

  <body>
    <%= render 'layouts/header' %>

    <button id="enable-notifications-btn" style="position:fixed; bottom:2em; left:50%; transform:translateX(-50%); z-index:9999; background:#D4A574; color:#8B1538; border:none; border-radius:18px; padding:0.5em 1.2em; font-size:0.98em; font-weight:600; box-shadow:0 2px 10px rgba(0,0,0,0.12); display:none;">Activer les notifications üîî</button>

    <div id="flash-container" class="flash-container">
      <% flash.each do |type, message| %>
        <div class="flash-message <%= type %>">
          <%= message %>
        </div>
      <% end %>
    </div>

    <main class="container">
      <%= yield %>
    </main>

    <div id="modal-backdrop" class="modal-backdrop"></div>

    <script>
      document.addEventListener('turbo:load', () => {
        // --- Flash message handler ---
        const flashMessages = document.querySelectorAll('.flash-message');

        if (flashMessages.length > 0) {
          flashMessages.forEach((message, index) => {
            // Stagger the animation for multiple messages
            setTimeout(() => {
              message.classList.add('show');
            }, index * 100);

            // Hide after 2.5 seconds (giving a bit more time for the animation)
            setTimeout(() => {
              message.classList.remove('show');
              // Optional: remove from DOM after transition
              setTimeout(() => {
                if (message.parentElement) {
                  message.parentElement.removeChild(message);
                }
              }, 500); // Wait for fade-out transition
            }, 2500 + (index * 100));
          });
        }

        // --- Modal handler ---
        const modal = document.getElementById('scenario-modal');
        const backdrop = document.getElementById('modal-backdrop');

        // Listen for form submission inside the modal
        const scenarioForm = document.getElementById('passion-scenario-form');
        if (scenarioForm) {
          scenarioForm.addEventListener('submit', function() {
            closeModal();
          });
        }

        // Affiche le bouton d‚Äôactivation OneSignal sur mobile si la cloche n‚Äôest pas visible
        function isMobile() {
          return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
        }
        const notifBtn = document.getElementById('enable-notifications-btn');
        if (notifBtn && isMobile()) {
          // Ajoute un span pour afficher le statut de permission (debug)
          let debugSpan = document.createElement('span');
          debugSpan.id = 'notif-permission-debug';
          debugSpan.style.marginLeft = '8px';
          debugSpan.style.fontSize = '12px';
          debugSpan.style.color = '#b22222';
          notifBtn.parentNode.insertBefore(debugSpan, notifBtn.nextSibling);

          function updateDebugPermission() {
            if (window.OneSignal && OneSignal.getNotificationPermission) {
              OneSignal.getNotificationPermission().then(function(permission) {
                debugSpan.textContent = 'Permission: ' + permission;
                if (permission === 'granted' || permission === 'denied') {
                  notifBtn.style.display = 'none';
                } else {
                  notifBtn.style.display = 'block';
                }
              });
            } else {
              debugSpan.textContent = 'Permission: inconnu';
              notifBtn.style.display = 'block';
            }
          }
          updateDebugPermission();

          notifBtn.addEventListener('click', function() {
            console.log('Bouton notifications cliqu√©');
            if (window.OneSignal) {
              if (OneSignal.showSlidedownPrompt) {
                console.log('OneSignal.showSlidedownPrompt appel√©');
                OneSignal.showSlidedownPrompt();
              } else if (OneSignal.Notifications && OneSignal.Notifications.requestPermission) {
                console.log('OneSignal.Notifications.requestPermission appel√©');
                OneSignal.Notifications.requestPermission();
              } else {
                alert('Erreur : OneSignal est charg√© mais aucune m√©thode de prompt n‚Äôest disponible.');
              }
            } else {
              alert('Erreur : OneSignal n\'est pas encore charg√©. R√©essaie dans quelques secondes.');
            }
            // Force la disparition du bouton apr√®s clic (UX radicale)
            setTimeout(updateDebugPermission, 2000); // V√©rifie la permission apr√®s 2s
            notifBtn.style.display = 'none'; // Disparition imm√©diate
          });
        }

        // Attache l‚Äô√©v√©nement apr√®s l‚Äôinitialisation OneSignal
        window.OneSignalDeferred = window.OneSignalDeferred || [];
        OneSignalDeferred.push(function(OneSignal) {
          if (isMobile()) {
            var notifBtn = document.getElementById('enable-notifications-btn');
            var debugSpan = document.getElementById('notif-permission-debug');
            if (notifBtn) {
              OneSignal.on('notificationPermissionChange', function(permission) {
                notifBtn.style.display = 'none';
                if (debugSpan) debugSpan.textContent = 'Permission: ' + permission;
              });
            }
          }
        });
      });
    </script>
  </body>
</html>
